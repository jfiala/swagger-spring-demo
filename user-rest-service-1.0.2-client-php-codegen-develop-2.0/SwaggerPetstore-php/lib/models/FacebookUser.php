<?php
/**
 *  Copyright 2015 Reverb Technologies, Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */



/**
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */

namespace SwaggerPetstore\models;

use \ArrayAccess;

class FacebookUser implements ArrayAccess {
  static $swaggerTypes = array(
      'id' => 'int',
      'name' => 'string',
      'about' => 'string',
      'description' => 'string',
      'founded' => 'string',
      'category_list' => 'array[Category]',
      'mission' => 'string'
  );

  static $attributeMap = array(
      'id' => 'id',
      'name' => 'name',
      'about' => 'about',
      'description' => 'description',
      'founded' => 'founded',
      'category_list' => 'category_list',
      'mission' => 'mission'
  );

  
  /**
  * Page ID. No access token is required to access this field
  */
  public $id; /* int */
  /**
  * Information about the Page
  */
  public $name; /* string */
  public $about; /* string */
  public $description; /* string */
  public $founded; /* string */
  public $category_list; /* array[Category] */
  public $mission; /* string */

  public function __construct(array $data = null) {
    $this->id = $data["id"];
    $this->name = $data["name"];
    $this->about = $data["about"];
    $this->description = $data["description"];
    $this->founded = $data["founded"];
    $this->category_list = $data["category_list"];
    $this->mission = $data["mission"];
  }

  public function offsetExists($offset) {
    return isset($this->$offset);
  }

  public function offsetGet($offset) {
    return $this->$offset;
  }

  public function offsetSet($offset, $value) {
    $this->$offset = $value;
  }

  public function offsetUnset($offset) {
    unset($this->$offset);
  }
}


